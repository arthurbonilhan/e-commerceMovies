{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arthur Bonilha\\\\Documents\\\\ProjetosReact\\\\teste-react-arthurbonilhan\\\\wemovie-ecommerce\\\\we-movies\\\\src\\\\components\\\\organisms\\\\MovieList\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchMovies } from '../../services/api';\nimport MovieCard from '../../molecules/MovieCard';\nimport Loader from '../../atoms/Loader';\nimport ErrorMessage from './ErrorMessage'; // Adjust the path as per your project structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieList = ({\n  onAddToCart,\n  onRemoveFromCart,\n  cartItems\n}) => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const getMovies = async () => {\n      try {\n        const data = await fetchMovies();\n        setMovies(data.products);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n        setLoading(false);\n        setError('Failed to fetch movies. Please try again later.');\n      }\n    };\n    getMovies();\n  }, []);\n  const handleReloadMovies = () => {\n    setLoading(true);\n    getMovies();\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      onReload: handleReloadMovies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 w-full max-w-6xl mx-auto\",\n    children: movies.map(movie => {\n      var _cartItem$quantity;\n      const cartItem = cartItems.find(item => item.id === movie.id);\n      const quantity = cartItem ? (_cartItem$quantity = cartItem.quantity) !== null && _cartItem$quantity !== void 0 ? _cartItem$quantity : 0 : 0;\n      return /*#__PURE__*/_jsxDEV(MovieCard, {\n        id: movie.id,\n        title: movie.title,\n        price: movie.price,\n        image: movie.image,\n        onAddToCart: () => onAddToCart(movie),\n        onRemoveFromCart: () => onRemoveFromCart(movie),\n        quantity: quantity\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieList, \"6wevkd2F3PCn4cJR5qV0d4ozTn8=\");\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useEffect","useState","fetchMovies","MovieCard","Loader","ErrorMessage","jsxDEV","_jsxDEV","MovieList","onAddToCart","onRemoveFromCart","cartItems","_s","movies","setMovies","loading","setLoading","error","setError","getMovies","data","products","console","handleReloadMovies","fileName","_jsxFileName","lineNumber","columnNumber","onReload","className","children","map","movie","_cartItem$quantity","cartItem","find","item","id","quantity","title","price","image","_c","$RefreshReg$"],"sources":["C:/Users/Arthur Bonilha/Documents/ProjetosReact/teste-react-arthurbonilhan/wemovie-ecommerce/we-movies/src/components/organisms/MovieList/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { fetchMovies } from '../../services/api'\r\nimport MovieCard from '../../molecules/MovieCard'\r\nimport { Movie } from '../../interfaces/Movie'\r\nimport Loader from '../../atoms/Loader'\r\nimport { MovieListProps } from '../../interfaces/MovieListProps'\r\nimport ErrorMessage from './ErrorMessage' // Adjust the path as per your project structure\r\n\r\nconst MovieList: React.FC<MovieListProps> = ({ onAddToCart, onRemoveFromCart, cartItems }) => {\r\n  const [movies, setMovies] = useState<Movie[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState<string | null>(null)\r\n\r\n  useEffect(() => {\r\n    const getMovies = async () => {\r\n      try {\r\n        const data = await fetchMovies()\r\n        setMovies(data.products)\r\n        setLoading(false)\r\n      } catch (error) {\r\n        console.error('Error fetching movies:', error)\r\n        setLoading(false)\r\n        setError('Failed to fetch movies. Please try again later.')\r\n      }\r\n    }\r\n\r\n    getMovies()\r\n  }, [])\r\n\r\n  const handleReloadMovies = () => {\r\n    setLoading(true)\r\n    getMovies()\r\n  }\r\n\r\n  if (loading) {\r\n    return <Loader />\r\n  }\r\n\r\n  if (error) {\r\n    return <ErrorMessage onReload={handleReloadMovies} />\r\n  }\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 w-full max-w-6xl mx-auto\">\r\n      {movies.map((movie) => {\r\n        const cartItem = cartItems.find((item) => item.id === movie.id)\r\n        const quantity = cartItem ? cartItem.quantity ?? 0 : 0\r\n        return (\r\n          <MovieCard\r\n            key={movie.id}\r\n            id={movie.id}\r\n            title={movie.title}\r\n            price={movie.price}\r\n            image={movie.image}\r\n            onAddToCart={() => onAddToCart(movie)}\r\n            onRemoveFromCart={() => onRemoveFromCart(movie)}\r\n            quantity={quantity}\r\n          />\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MovieList\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}